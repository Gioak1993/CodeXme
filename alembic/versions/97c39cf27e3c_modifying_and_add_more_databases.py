"""modifying and add more databases

Revision ID: 97c39cf27e3c
Revises: 108bc255b4d2
Create Date: 2024-04-30 23:02:38.856904

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = '97c39cf27e3c'
down_revision: Union[str, None] = '108bc255b4d2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('submission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('problem_id', sa.Integer(), nullable=True),
    sa.Column('source_code', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('submission_time', sa.Numeric(), nullable=True),
    sa.ForeignKeyConstraint(['problem_id'], ['problem.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_submission_problem_id'), 'submission', ['problem_id'], unique=False)
    op.create_index(op.f('ix_submission_user_id'), 'submission', ['user_id'], unique=False)
    op.create_table('result',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('submission_id', sa.Integer(), nullable=True),
    sa.Column('testcase_id', sa.Integer(), nullable=True),
    sa.Column('passed', sa.Boolean(), nullable=False),
    sa.Column('execution_time', sa.Numeric(), nullable=True),
    sa.Column('memory_usage', sa.Numeric(), nullable=True),
    sa.ForeignKeyConstraint(['submission_id'], ['submission.id'], ),
    sa.ForeignKeyConstraint(['testcase_id'], ['testcase.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_result_submission_id'), 'result', ['submission_id'], unique=False)
    op.create_index(op.f('ix_result_testcase_id'), 'result', ['testcase_id'], unique=False)
    op.add_column('problem', sa.Column('category_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'problem', 'category', ['category_id'], ['id'])
    op.drop_column('problem', 'input_values')
    op.drop_column('problem', 'output_description')
    op.add_column('testcase', sa.Column('input_data', sqlmodel.sql.sqltypes.AutoString(), nullable=False))
    op.create_index(op.f('ix_testcase_problem_id'), 'testcase', ['problem_id'], unique=False)
    op.drop_column('testcase', 'input_case')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('testcase', sa.Column('input_case', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_testcase_problem_id'), table_name='testcase')
    op.drop_column('testcase', 'input_data')
    op.add_column('problem', sa.Column('output_description', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('problem', sa.Column('input_values', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'problem', type_='foreignkey')
    op.drop_column('problem', 'category_id')
    op.drop_index(op.f('ix_result_testcase_id'), table_name='result')
    op.drop_index(op.f('ix_result_submission_id'), table_name='result')
    op.drop_table('result')
    op.drop_index(op.f('ix_submission_user_id'), table_name='submission')
    op.drop_index(op.f('ix_submission_problem_id'), table_name='submission')
    op.drop_table('submission')
    op.drop_table('category')
    # ### end Alembic commands ###
